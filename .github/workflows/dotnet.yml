name: .NET

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
        include-prerelease: true

    # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n garage
        -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Entity.TimesheetProjectType

    - name: Restore Entity.TimesheetProjectType
      run: dotnet restore ./src/*/*/Entity.TimesheetProjectType.csproj

    - name: Build Entity.TimesheetProjectType
      run: dotnet build ./src/*/*/Entity.TimesheetProjectType.csproj --no-restore  -c Release

    - name: Pack Entity.TimesheetProjectType
      run: dotnet pack ./src/*/*/Entity.TimesheetProjectType.csproj --no-restore -o ~/nuget  -c Release

    # Contract.Timesheet.Create

    - name: Restore Contract.Timesheet.Create
      run: dotnet restore ./src/*/*/Contract.Timesheet.Create.csproj

    - name: Build Contract.Timesheet.Create
      run: dotnet build ./src/*/*/Contract.Timesheet.Create.csproj --no-restore  -c Release

    - name: Pack Contract.Timesheet.Create
      run: dotnet pack ./src/*/*/Contract.Timesheet.Create.csproj --no-restore -o ~/nuget  -c Release

    # Contract.ProjectSet.Search

    - name: Restore Contract.ProjectSet.Search
      run: dotnet restore ./src/*/*/Contract.ProjectSet.Search.csproj

    - name: Build Contract.ProjectSet.Search
      run: dotnet build ./src/*/*/Contract.ProjectSet.Search.csproj --no-restore  -c Release

    - name: Pack Contract.ProjectSet.Search
      run: dotnet pack ./src/*/*/Contract.ProjectSet.Search.csproj --no-restore -o ~/nuget  -c Release

    # Contract.TimesheetSet.Get

    - name: Restore Contract.TimesheetSet.Get
      run: dotnet restore ./src/*/*/Contract.TimesheetSet.Get.csproj

    - name: Build Contract.TimesheetSet.Get
      run: dotnet build ./src/*/*/Contract.TimesheetSet.Get.csproj --no-restore  -c Release

    - name: Pack Contract.TimesheetSet.Get
      run: dotnet pack ./src/*/*/Contract.TimesheetSet.Get.csproj --no-restore -o ~/nuget  -c Release

    # Contract.FavoriteProjectSet.Get

    - name: Restore Contract.FavoriteProjectSet.Get
      run: dotnet restore ./src/*/*/Contract.FavoriteProjectSet.Get.csproj

    - name: Build Contract.FavoriteProjectSet.Get
      run: dotnet build ./src/*/*/Contract.FavoriteProjectSet.Get.csproj --no-restore  -c Release

    - name: Pack Contract.FavoriteProjectSet.Get
      run: dotnet pack ./src/*/*/Contract.FavoriteProjectSet.Get.csproj --no-restore -o ~/nuget  -c Release

    # Contract.Timesheet.Delete

    - name: Restore Contract.Timesheet.Delete
      run: dotnet restore ./src/*/*/Contract.Timesheet.Delete.csproj

    - name: Build Contract.Timesheet.Delete
      run: dotnet build ./src/*/*/Contract.Timesheet.Delete.csproj --no-restore  -c Release

    - name: Pack Contract.Timesheet.Delete
      run: dotnet pack ./src/*/*/Contract.Timesheet.Delete.csproj --no-restore -o ~/nuget  -c Release

    # Contract

    - name: Restore Contract
      run: dotnet restore ./src/*/*/Contract.csproj

    - name: Build Contract
      run: dotnet build ./src/*/*/Contract.csproj --no-restore  -c Release

    - name: Pack Contract
      run: dotnet pack ./src/*/*/Contract.csproj --no-restore -o ~/nuget  -c Release

    # Api

    - name: Restore Api
      run: dotnet restore ./src/*/*/Api.csproj

    - name: Build Api
      run: dotnet build ./src/*/*/Api.csproj --no-restore  -c Release

    - name: Pack Api
      run: dotnet pack ./src/*/*/Api.csproj --no-restore -o ~/nuget  -c Release

    # Api.Test

    - name: Restore Api.Test
      run: dotnet restore ./src/*/*/Api.Test.csproj

    - name: Test Api.Test
      run: dotnet test ./src/*/*/Api.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate
